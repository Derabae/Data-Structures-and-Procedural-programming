// PROCEDURE VERSION

PROCEDURE dot_product(v1, v2: ARRAY OF INTEGER, n: INTEGER, VAR ps: INTEGER)
VAR
    i : INTEGER;
BEGIN
    ps := 0;
    FOR i FROM 0 TO n-1 DO
        ps := ps + (v1[i] * v2[i]);
    END_FOR
END

ALGORITHM check_orthogonal_vectors
VAR
    v1, v2 : ARRAY [0..2] OF INTEGER;
    ps : INTEGER;
    i : INTEGER;

BEGIN
    // Sample Vectors
    v1 := [1, 2, 3];
    v2 := [-2, 1, 0];

    // Call the dot_product procedure
    dot_product(v1, v2, 3, ps);

    Write("Dot Product: ", ps);

    IF ps = 0 THEN
        Write("The vectors are orthogonal.");
    ELSE
        Write("The vectors are not orthogonal.");
    END_IF
END


// FUNCTION VERSION

FUNCTION dot_product(v1, v2: ARRAY OF INTEGER, n: INTEGER) : INTEGER
VAR
    i, product : INTEGER;
BEGIN
    product := 0;
    FOR i FROM 0 TO n-1 DO
        product := product + (v1[i] * v2[i]);
    END_FOR
    RETURN product;
END

// Output:
// Dot Product: 0
// The vectors are orthogonal.
